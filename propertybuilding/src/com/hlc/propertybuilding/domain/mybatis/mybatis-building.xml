<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlc.propertybuilding.domain.TBuilding">
	<resultMap id="building" type="com.hlc.propertybuilding.domain.TBuilding">
		<result column="buil_id" property="builId" jdbcType="INTEGER" />
		<result column="buil_order" property="builOrder" jdbcType="INTEGER" />
		<result column="buil_no" property="builNo" jdbcType="VARCHAR" />
		<result column="buil_name" property="builName" jdbcType="VARCHAR" />
		<result column="buil_create" property="builCreate" jdbcType="VARCHAR" />
		<result column="buil_memo" property="builMemo" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 表名 -->
	<sql id="tableNameSql">
		t_building 
	</sql>

	<!-- 用于select查询、insert的公用抽取的列 -->
	<sql id="commonSelectColumnsPrefix">
        	buil_id ,
        	buil_order ,
        	buil_no ,
        	buil_name ,
        	buil_create,
        	buil_memo
	</sql>

	<!-- 按主键查找条件语句 -->
	<sql id="conditionOnlyId">
		buil_id = #{builId}
	</sql>
	
	<sql id="mainSql">
		SELECT
			<include refid="commonSelectColumnsPrefix"/>
		FROM
			<include refid="tableNameSql"/> 
	</sql>
<!-- 
	<sql id="varSql">
		<where>
			<if test="appvchangeinfo!=null and appvchangeinfo!=''">and p.appvChangeInfo like #{appvchangeinfo} </if>
			<if test="appvdesc!=null and appvdesc!=''">and p.appvDesc like #{appvdesc} </if>
			<if test="appvintro!=null and appvintro!=''">and p.appvIntro like #{appvintro} </if>
			<if test="appvname!=null and appvname!=''">and p.appvName like #{appvname} </if>
			<if test="datpath!=null and datpath!=''">and p.datPath like #{datpath} </if>
			<if test="goodsname!=null and goodsname!=''">and p.goodsName like #{goodsname} </if>
			<if test="goodssn!=null and goodssn!=''">and p.goodsSn like #{goodssn} </if>
			<if test="icon!=null and icon!=''">and p.icon like #{icon} </if>
			<if test="isalonesale!=null and isalonesale!=''">and p.isAloneSale like #{isalonesale} </if>
			<if test="isbest!=null and isbest!=''">and p.isBest like #{isbest} </if>
			<if test="ischeck!=null and ischeck!=''">and p.isCheck like #{ischeck} </if>
			<if test="isdelete!=null and isdelete!=''">and p.isDelete like #{isdelete} </if>
			<if test="ishot!=null and ishot!=''">and p.isHot like #{ishot} </if>
			<if test="isnew!=null and isnew!=''">and p.isNew like #{isnew} </if>
			<if test="manufacturer!=null and manufacturer!=''">and p.manufacturer like #{manufacturer} </if>
			<if test="sortorder!=null and sortorder!=''">and p.sortOrder like #{sortorder} </if>
			<if test="sourcepath!=null and sourcepath!=''">and p.sourcePath like #{sourcepath} </if>
		</where>
	</sql>

	<select id="findPageBy" parameterType="java.util.Map" resultMap="gGoodsResultMap">
 		<include refid="mainSql"/>
 		<include refid="varSql"/>
		<if test="SORT != null and SORT != ''">
 			order by ${SORT}
 			<if test="DIR != null and DIR != ''">
 				 ${DIR}
 			</if>
 		</if>
	</select>
 -->
	<select id="getById" parameterType="String" resultMap="gGoodsResultMap">
		<include refid="mainSql"/>
		where <include refid="conditionOnlyId"/>
	</select>
<!-- 
	<select id="getCountBy" parameterType="java.util.Map" resultType="INTEGER">
		SELECT
			COUNT(*) AS C
		FROM
			<include refid="tableNameSql"/> p
		<include refid="varSql"/>
	</select>

	<select id="findListBy" parameterType="java.util.Map" resultMap="gGoodsResultMap">
		<include refid="mainSql"/>
		<include refid="varSql"/>
	</select>
 -->
	<insert id="save" parameterType="com.hlc.propertybuilding.domain.TBuilding">
		insert into
			<include refid="tableNameSql"/>
		(buil_order,buil_no,buil_name,buil_create,buil_memo)
		values
		( 
			#{builOrder},
			#{builNo},
			#{builName},
			#{builCreate},
			#{builMemo}
		)
	</insert>

	<update id="update" parameterType="com.hlc.propertybuilding.domain.TBuilding">
		update
			<include refid="tableNameSql"/>
		set
			buil_order = #{builOrder},
			buil_no = #{builNo},
			buil_name = #{builName},
			buil_create = #{builCreate},
			buil_memo = #{builMemo}
		where <include refid="conditionOnlyId"/>
	</update>

	<delete id="deleteByIds" parameterType="Object[]">
		delete from <include refid="tableNameSql"/> 
		where buil_id in <foreach index="index" item="item" collection="array" separator="," open="(" close=")" >#{item}</foreach>
	</delete>

	<delete id="deleteById" parameterType="Object">
		delete from <include refid="tableNameSql"/> where <include refid="conditionOnlyId"/>
	</delete>

</mapper>