<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
    <!-- 通过分散配置指定jdbc的属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 指定spring需要扫面的包 -->
    <context:component-scan base-package="com.hlc.archivesmgmt.dao.impl,com.hlc.archivesmgmt.service,com.hlc.archivesmgmt.struts.action"/>
    
    <!-- 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.connection.driverclass}" />
        <property name="jdbcUrl" value="${jdbc.connection.url}" />
        <property name="user" value="${jdbc.connection.username}" />
        <property name="password" value="${jdbc.connection.password}" />
        
        <property name="maxPoolSize" value="${c3p0.pool.size.max}" />
        <property name="minPoolSize" value="${c3p0.pool.size.min}" />
        <property name="initialPoolSize" value="${c3p0.pool.size.ini}" />
        <property name="acquireIncrement" value="${c3p0.pool.size.increment}" />
        <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}" />
        <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
    </bean>
    
    <!-- 会话工厂,spring整合hibernate的核心入口 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
            </props>
        </property>
        <!-- 映射目录位置集 -->
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:com/hlc/archivesmgmt/entity</value>
            </list>
        </property>
    </bean>
    
    <!-- 配置hibernate事务管理器,在service层面上实现事务管理,而且达到平台无关性 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="clear*" propagation="REQUIRED" isolation="DEFAULT"/>
            
            <tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="is*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
    
    
    
    <!-- aop配置 -->
    <aop:config>
        <!-- 定义切入点表达式 -->
        <aop:pointcut id="txPointcut" expression="execution(* *..*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
     
</beans>